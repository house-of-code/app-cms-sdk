{"version":3,"file":"AppCMSClient.js","sourceRoot":"","sources":["../src/AppCMSClient.ts"],"names":[],"mappings":"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","sourcesContent":["import fetch, {RequestInit} from 'node-fetch'\nimport * as FormData from 'form-data'\nimport * as querystring from 'query-string'\n\nexport interface AppCMSClientConfig {\n    apiKey: string\n    baseUrl?: string\n    language?: string\n\n}\n\nexport class AppCMSClient<Content> {\n\n    private baseURL: string = \"https://www.appcms.dk\"\n    private accessToken: string = ''\n    private language: string = 'en'\n\n    constructor(\n        private clientConfig: AppCMSClientConfig,\n    ) {\n\n        if(clientConfig.baseUrl) {\n            this.baseURL = clientConfig.baseUrl\n        }\n\n        if(clientConfig.language) {\n            this.language = clientConfig.language\n        }\n\n        this.accessToken = ''\n\n    }\n\n    public setLanguage = (language: string) => {\n        this.language = language\n    }\n\n    public setAccessToken = (token: string) => {\n        this.accessToken = token\n    }\n\n    private generateURL = (endpoint: string, withAPIKey: boolean = true, params?: {[key: string]: string}) => {\n        let url = `${this.baseURL}`\n        let queryParams = \"\"\n\n        if(params) {\n            queryParams = querystring.stringify(params)\n            console.log(\"Generated params\", queryParams)\n        }\n\n\n\n\n\n        if(withAPIKey) {\n            url += `/api/${this.clientConfig.apiKey}`\n        }\n\n        if(endpoint.charAt(0) !== \"/\") {\n            return `${url}/${endpoint}?${queryParams}`\n        }\n\n        return `${url}${endpoint}?${queryParams}`\n    }\n\n    private makeRequest = async (url: string, method=\"get\", data?: any): Promise<Content> => {\n        const requestOptions: RequestInit = {\n            method,\n            headers: {},\n        }\n\n        if(this.accessToken.length > 0) {\n            requestOptions.headers[\"authorization\"] = `Bearer ${this.accessToken}`\n        }\n\n\n\n        switch (method.toLowerCase()) {\n            case \"post\":\n            case \"patch\":\n            case 'put':\n                requestOptions.method = method\n\n                if(data instanceof FormData) {\n                    requestOptions.body = data\n                }\n                else {\n                    requestOptions.body = JSON.stringify(data)\n                    requestOptions.headers['content-type'] = 'application/json'\n                }\n\n\n                break\n        }\n\n        console.log(`[Request] init - ${url} - ${method} - ${JSON.stringify(data)} - ${JSON.stringify(requestOptions.headers)}`)\n\n\n        const response = await fetch(url, requestOptions)\n\n        const contentType: string|undefined = response.headers[\"content-type\"]\n\n        if(contentType && contentType.toLowerCase() !== \"application/json\") {\n            const text = await response.text()\n\n        }\n\n        const json = await response.json()\n\n\n        return json\n    }\n\n\n    get analytics() {\n        return {\n            log: (event: string, platform: string, deviceId: string, data?: string) => {\n                return this.makeRequest(this.generateURL(\"/analytics/log\"), \"post\", {\n                    analytic: {\n                        event,\n                        platform,\n                        device_id: deviceId,\n                        data\n                    }\n                })\n            }\n        }\n    }\n\n\n    get appConfig() {\n        return {\n            fetch: () => {\n                return this.makeRequest(this.generateURL(`/app_config`))\n            }\n        }\n    }\n\n    get content() {\n        return {\n            fetch: (): Promise<Content> => {\n                return this.makeRequest(this.generateURL(`/content/${this.language}`))\n            },\n            file: (fileId: string) => {\n                return this.makeRequest(this.generateURL(`/content/file/${fileId}`))\n            }\n        }\n    }\n\n    translations = () => {\n        return this.makeRequest(this.generateURL(\"/translated_texts/\" + this.language))\n    }\n\n\n    get vinduesgrossisten() {\n        const self = this\n        function tasks(date: string) {\n            return this.makeRequest(this.generateURL(`/vinduesgrossisten/tasks?date=${date}`))\n        }\n\n        return {\n            login: (accessKey: string) => {\n                return this.makeRequest(this.generateURL(`/vinduesgrossisten/engineer-login`), \"post\", {access_key: accessKey})\n            },\n            tasks: (date: string) => {\n                return this.makeRequest(this.generateURL(`/vinduesgrossisten/tasks?date=${date}`))\n            },\n            taskUpdate: (taskId: string, values: {note?: string, materials?: string}) => {\n                return this.makeRequest(this.generateURL(`/vinduesgrossisten/tasks/${taskId}`), \"patch\", values)\n            },\n            tasksUpdateStatus: (taskId: string|number, statusId: string, note: string, delay?: number)  => {\n                return this.makeRequest(this.generateURL(`/vinduesgrossisten/tasks/${taskId}/status`), \"put\", {vin_status_id: statusId, note, delay})\n            },\n            statuses: () => {\n                return this.makeRequest(this.generateURL(`/vinduesgrossisten/statuses`))\n            },\n            taskCreateDocumentations(taskId: number|string, data: FormData) {\n                return self.makeRequest(self.generateURL(`/vinduesgrossisten/tasks/${taskId}/documentations`), 'post', data)\n            },\n            taskUpdateDocumentations(taskId: number|string, documentationId: string|number, values: {note?: string}) {\n                return self.makeRequest(self.generateURL(`/vinduesgrossisten/tasks/${taskId}/documentations/${documentationId}`), 'patch', values)\n            },\n            taskDocumentationImage(taskId: string|number, documentationId: string| number, config: {width?: string|number, height?: string|number, crop?: boolean}) {\n                const params : any = {}\n                if(config.hasOwnProperty('width')) {\n                    params.w = config.width\n                }\n\n                if(config.hasOwnProperty('height')) {\n                    params.h = config.height\n                }\n\n                if(config.hasOwnProperty('crop')) {\n                    params.crop = config.crop\n                }\n\n                const url = self.generateURL(`/vinduesgrossisten/tasks/${taskId}/documentations/${documentationId}/image`, true, params)\n\n                return self.makeRequest(url)\n\n            },\n            taskDeleteDocumentation(taskId: number|string, documentationId: string|number) {\n                return self.makeRequest(self.generateURL(`/vinduesgrossisten/tasks/${taskId}/documentations/${documentationId}`), \"delete\")\n            },\n        }\n    }\n\n    get cphtrucking() {\n        const self = this\n        function tasks(date: string) {\n            return this.makeRequest(this.generateURL(`/cphtrucking/tasks?date=${date}`))\n        }\n\n        return {\n            login: (accessKey: string) => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/engineer-login`), \"post\", {access_key: accessKey})\n            },\n            customers: () => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/customers`))\n            },\n            tasks: (date: string) => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/tasks?date=${date}`))\n            },\n            taskNames: () => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/task_names`))\n            },\n            taskUpdate: (taskId: string, values: {note?: string, materials?: string}) => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/tasks/${taskId}`), \"patch\", values)\n            },\n            tasksUpdateStatus: (taskId: string|number, statusId: string, note: string, delay?: number)  => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/tasks/${taskId}/status`), \"put\", {ct_status_id: statusId, note, delay})\n            },\n            statuses: () => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/statuses`))\n            },\n            taskCreateDocumentations(taskId: number|string, data: FormData) {\n                return self.makeRequest(self.generateURL(`/cphtrucking/tasks/${taskId}/documentations`), 'post', data)\n            },\n            taskUpdateDocumentations(taskId: number|string, documentationId: string|number, values: {note?: string}) {\n                return self.makeRequest(self.generateURL(`/cphtrucking/tasks/${taskId}/documentations/${documentationId}`), 'patch', values)\n            },\n            taskDocumentationImage(taskId: string|number, documentationId: string| number, config: {width?: string|number, height?: string|number, crop?: boolean}) {\n                const params : any = {}\n                if(config.hasOwnProperty('width')) {\n                    params.w = config.width\n                }\n\n                if(config.hasOwnProperty('height')) {\n                    params.h = config.height\n                }\n\n                if(config.hasOwnProperty('crop')) {\n                    params.crop = config.crop\n                }\n\n                const url = self.generateURL(`/cphtrucking/tasks/${taskId}/documentations/${documentationId}/image`, true, params)\n\n                return self.makeRequest(url)\n\n            },\n            taskDeleteDocumentation(taskId: number|string, documentationId: string|number) {\n                return self.makeRequest(self.generateURL(`/cphtrucking/tasks/${taskId}/documentations/${documentationId}`), \"delete\")\n            },\n            taskStart: (taskId: number|string) => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/tasks/${taskId}/start`), \"patch\")\n            },\n            taskEnd: (taskId: number|string) => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/tasks/${taskId}/end`), \"patch\")\n            },\n            addresses: () => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/addresses`))\n            },\n            contactPersons: () => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/contact_persons`))\n            },\n            workshiftCurrent: () => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/workshift`))\n            },\n            workshiftIndex: () => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/workshifts`))\n            },\n            workshiftStart: () => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/start_workshift`), \"patch\")\n            },\n            workshiftEnd: () => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/end_workshift`), \"patch\")\n            },\n            taskCreate: (task: Task) => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/tasks`), \"post\", {ct_task: {\n                    ct_task_name_id: task.ct_task_name_id,\n                    task_date: task.task_date,\n                    ct_customer_id: task.ct_customer.id,\n                    ct_status_id: task.status_note.ct_status.id,\n                    ct_status_note: task.status_note.note,\n                    ct_order_type_id: null,\n                    estimate: task.estimate,\n                    description: task.description,\n                    note: task.note,\n                    task_id: task.task_id,\n                    ct_contact_person_id: task.contact_person.id,\n                    pickup_address_id: task.pickup_address.id,\n                    deliver_address_id: task.deliver_address.id\n                }})\n            },\n            taskWorklogs: (taskId: number|string) => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/tasks/${taskId}/work_logs`))\n            },\n            taskWorklogsSet: (taskId: number|string, status: 'start' | 'pause' | 'end' ) => {\n                return this.makeRequest(this.generateURL(`/cphtrucking/tasks/${taskId}/work_logs/${status}`), 'post')\n            }\n        }\n    }\n\n}\n\n"]}